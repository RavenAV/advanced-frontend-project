{
  "compilerOptions": {
    // То куда производится сборка, но в данном случае она не нужна т.к. используем webpack
    "outDir": "./dist/",
    "sourceMap": true,
    // Подсвечивает все места, где не указан тип
    // Однако это не означает, что теперь вовсе нельзя использовать any
    // Это означает лишь, что в подобных ситуациях разработчик должен явно писать any
    "noImplicitAny": true,
    // Указываем модульную систему
    "module": "ESNext",
    // В какую спецификацию компилируем: для поддержки большинства браузеров
    "target": "es5",
    "jsx": "react-jsx",
    // Компилятор будет обрабатывать не только ts файлы, но и js
    "allowJs": true,
    "moduleResolution": "node",
    // для абсолютного импорта
    "baseUrl": ".",
    "paths": {
      // все абсолютные экспорты/импорты будут идти из папки src
      "*": [
        "./src/*"
      ]
    },
    // esModuleInterop позволяет работать с пакетами, которые используют common js как с обычными пакетами
    // с помощью import require() module.export() = common js
    // ***Example***
    // import Moment from 'moment';
    // без флага esModuleInterop результат undefined
    // console.log(Moment);
    // с флагом esModuleInterop результат [object Object]
    // console.log(Moment);
    "esModuleInterop": true,
    // Если какая-либо библиотека не имеет default import, лоадеры вроде ts-loader или babel-loader
    // автоматически создают их вместо такого импорта
    // ***Example***
    // import * as React from 'react';
    // можно писать иначе
    // import React from 'react'
    "allowSyntheticDefaultImports": true
  },
  "ts-node": {
    "compilerOptions": {
      "module": "CommonJS"
    }
  },
  // In tsconfig.json
  "include": [
    "./src/**/*",
    "./config/jest/setupTests.ts"
  ]
}